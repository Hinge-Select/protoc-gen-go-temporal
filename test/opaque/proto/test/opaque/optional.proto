syntax = "proto3";

package test.opaque;

import "google/protobuf/empty.proto";
import "temporal/v1/temporal.proto";
import "test/opaque/common.proto";

service Optional {
  option (temporal.v1.service) = {task_queue: "opaque-optional"};

  rpc PutOptionalExample(OptionalExample) returns (OptionalExample) {
    option (temporal.v1.workflow) = {
      signal: {
        ref: "SignalOptional"
        start: true
      }
    };
  }

  rpc SignalOptional(OptionalExample) returns (google.protobuf.Empty) {
    option (temporal.v1.signal) = {};
  }
}

message OptionalExample {
  optional string name = 1;
  optional double score = 2;
  repeated double scores = 3;
  optional float ratio = 4;
  repeated float ratios = 5;
  optional int32 age = 6;
  repeated int32 ages = 7;
  optional int64 id = 8;
  repeated int64 ids = 9;
  repeated string emails = 10;
  map<string, string> extra = 11;
  optional Status status = 12;
  repeated Status statuses = 13;
  optional uint32 size = 14;
  repeated uint32 sizes = 15;
  optional uint64 length = 16;
  repeated uint64 lengths = 17;
  optional sint32 connection_id = 18;
  repeated sint32 connection_ids = 19;
  optional sint64 session_id = 20;
  repeated sint64 session_ids = 21;
  optional fixed32 fixed_size = 22;
  repeated fixed32 fixed_sizes = 23;
  optional fixed64 fixed_length = 24;
  repeated fixed64 fixed_lengths = 25;
  optional sfixed32 sfixed_size = 26;
  repeated sfixed32 sfixed_sizes = 27;
  optional sfixed64 sfixed_length = 28;
  repeated sfixed64 sfixed_lengths = 29;
  optional bool is_active = 30;
  repeated bool is_actives = 31;
  optional bytes data = 32;
  repeated bytes datas = 33;
  optional Address address = 34;
  repeated Address previous_addresses = 35;
  oneof oneof_field {
    string oneof_name = 36;
    double oneof_score = 37;
    float oneof_ratio = 38;
    int32 oneof_age = 39;
    int64 oneof_id = 40;
    Status oneof_status = 41;
    uint32 oneof_size = 42;
    uint64 oneof_length = 43;
    sint32 oneof_connection_id = 44;
    sint64 oneof_session_id = 45;
    fixed32 oneof_fixed_size = 46;
    fixed64 oneof_fixed_length = 47;
    sfixed32 oneof_sfixed_size = 48;
    sfixed64 oneof_sfixed_length = 49;
    bool oneof_is_active = 50;
    bytes oneof_data = 51;
    Address oneof_address = 52;
  }
}
